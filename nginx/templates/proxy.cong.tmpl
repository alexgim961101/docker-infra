# 기본 서버 설정
server {
    listen 80 default_server;
    server_name _; # 기본 서버

    location /.well-known/acme-challenge/ {
        root /var/lib/letsencrypt/.well-known;
    }

    location / {
        return 404;
    }
}

{{ range $host, $containers := groupByMulti $ "Env.VIRTUAL_HOST" "," }}
# {{ $host }} 서버 설정
server {
    listen 80;
    server_name {{ $host }};

    location /.well-known/acme-challenge/ {
        root /var/lib/letsencrypt/.well-known;
    }

    {{ if $.Env.SSL_ENABLED }}
    location / {
        return 301 https://{{ $host }}$request_uri;
    }
    {{ else }}
    {{ range $container := $containers }}
        {{ $containerNetwork := index $container.Networks 0 }}
        {{ $containerPort := or (index $container.Env "VIRTUAL_PORT") "80" }}
        {{ $containerPath := or (index $container.Env "VIRTUAL_PATH") "/" }}
        {{ $siteName := or (index $container.Env "SITE_NAME") "" }}
        {{ $enableWS := or (index $container.Env "ENABLE_WEBSOCKET") "false" }}
        {{ $httpVersion := or (index $container.Env "HTTP_VERSION") "1.0" }}
        
        {{ if $siteName }}
    # 정적 파일 서빙 - 구조화된 디렉토리 사용
    location / {
        root /var/www/html/sites/{{ $siteName }};
        index index.html;
        try_files $uri $uri/ /index.html;
    }
        {{ else }}
    # 프록시 설정
    location {{ $containerPath }} {
        proxy_pass http://{{ $containerNetwork.IP }}:{{ $containerPort }};
        proxy_http_version {{ $httpVersion }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket 지원 (환경변수로 제어)
        {{ if eq $enableWS "true" }}
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400; # WebSocket 연결 유지 (24시간)
        {{ else }}
        proxy_set_header Connection "";
        {{ end }}
        
        proxy_connect_timeout {{ $.Env.PROXY_TIMEOUT }};
        proxy_send_timeout {{ $.Env.PROXY_TIMEOUT }};
        proxy_read_timeout {{ $.Env.PROXY_TIMEOUT }};
        
        # 버퍼 관련 설정
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
        {{ end }}
    {{ end }}
    {{ end }}
}

{{ if $.Env.SSL_ENABLED }}
server {
    listen 443 ssl http2;
    server_name {{ $host }};
    
    ssl_certificate /etc/letsencrypt/live/{{ $host }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ $host }}/privkey.pem;
    
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    
    {{ range $container := $containers }}
        {{ $containerNetwork := index $container.Networks 0 }}
        {{ $containerPort := or (index $container.Env "VIRTUAL_PORT") "80" }}
        {{ $containerPath := or (index $container.Env "VIRTUAL_PATH") "/" }}
        {{ $siteName := or (index $container.Env "SITE_NAME") "" }}
        {{ $enableWS := or (index $container.Env "ENABLE_WEBSOCKET") "false" }}
        {{ $httpVersion := or (index $container.Env "HTTP_VERSION") "1.0" }}
        
        {{ if $siteName }}
    # 정적 파일 서빙 - 구조화된 디렉토리 사용
    location / {
        root /var/www/html/sites/{{ $siteName }};
        index index.html;
        try_files $uri $uri/ /index.html;
    }
        {{ else }}
    # 프록시 설정
    location {{ $containerPath }} {
        proxy_pass http://{{ $containerNetwork.IP }}:{{ $containerPort }};
        proxy_http_version {{ $httpVersion }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket 지원 (환경변수로 제어)
        {{ if eq $enableWS "true" }}
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400; # WebSocket 연결 유지 (24시간)
        {{ else }}
        proxy_set_header Connection "";
        {{ end }}
        
        proxy_connect_timeout {{ $.Env.PROXY_TIMEOUT }};
        proxy_send_timeout {{ $.Env.PROXY_TIMEOUT }};
        proxy_read_timeout {{ or (index $container.Env "PROXY_READ_TIMEOUT") $.Env.PROXY_TIMEOUT }};
        
        # 버퍼 관련 설정
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
        {{ end }}
    {{ end }}
}
{{ end }}
{{ end }}